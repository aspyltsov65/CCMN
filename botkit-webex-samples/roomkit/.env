#
# Store your bot settings in env variables below
# or specify variables on the command line
# 
# - note that this file is versionned by default
#   DO NOT PUT SECRETS IF YOU'RE PUSHING THE CODE TO EXTERNAL REPOS
#   as strangers would see your .env values
#
# - you can reference these variables in your code with process.env.SECRET for example
#
# - .env is a shell file so there can’t be spaces around =
#

# Uncomment if you wish to statically set a Webex Teams API access token
# - if you do so, make sure not to version this file in a public repo
# - if running the code from a private machine, setting secrets on the command line is recommended
#ACCESS_TOKEN=ABCDEFGHIJKLMONPQRSTUVWXYZ1234567890

# Name used to mention your bot in a 'Group' space
# used by the help command and the bot.enrichCommand utility
BOT_NICKNAME=MyRoomKit

# Secret used to generate an HMAC-SHA1 for each payload submitted to your bot
# Optional but highly recommended to use a Secret when going to production
SECRET=Not that secret !

# Internet facing URL where your bot can be reached
# note that botkit automatically appends the relative path "/ciscospark/receive"
#PUBLIC_URL=https://6544aa11.ngrok.io

# Name used to create the webhook to register your bot against Webex
# Defaults to 'built with BotKit (development)'
#
# WARNING: if you set or update this value,
#   - BotKit will automatically create a new WebHook with the ACCESS_TOKEN above
#   - BUT BotKit will not delete the previously created WebHook entry
#   - YOU will need to take this action manually
# HERE'S HOW
#   - manually list your bot webhooks via Postman or the Webex Teams API documentation
#     /!\ make sure to use your bot's access token
#     https://developer.webex.com/endpoint-webhooks-get.html
#   - identify the previously registered webhook identifier and delete it
#     https://developer.webex.com/endpoint-webhooks-webhookId-delete.html
#WEBHOOK_NAME=built with BotKit (development)

# Local port where your bot will be started
# defaults to 3000
#PORT=3000

# Node Environment
# defaults to development
#NODE_ENV=production

#
# RoomKit info
#
JSXAPI_DEVICE_URL=ssh://192.168.1.34
JSXAPI_USERNAME=integrator
JSXAPI_PASSWORD=integrator

# Restrict access to a space
#RESTRICTED_SPACE=Y2lzY29zcGFyazovL3VzL1JPT00vMzY3NGE3ZjAtNTc1ZC0xMWU4LTg4NzUtZTMzNTkyYjI4MGEz

# Grant access to a user
#GRANTED_EMAIL=stsfartz@cisco.com


#
# Bot meta info specified as Bot Commons specifications
#

# Bot legal owner
owner=Cisco DevNet <https://developer.cisco.com>

# Messaging platform
platform=Webex Teams

# Contact
support=Stève Sfartz <mailto:stsfartz@cisco.com>

# Source code
code=https://github.com/CiscoDevNet/botkit-webex-samples/roomkit